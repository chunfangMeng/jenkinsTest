version: "3"
volumes:
  db_vol:
  redis_vol:
  static_vol:
  media_vol:

networks:
  redis_network:
    driver: bridge
  db_networks:
    driver: bridge

services:
  redis:
    container_name: redis_db
    restart: always
    image: redis:latest
    env_file:
      - .env
    command: redis-server /etc/redis/redis.conf
    networks:
      - redis_network
    volumes:
      - redis_vol:/data
      - ./redis/redis.conf:/etc/redis/redis.conf
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
  db:
    container_name: jenkins_db
    restart: always
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    env_file:
      - .env
    networks:
      - db_networks
    volumes:
      - db_vol:/var/lib/mysql:rw
      - ./db/conf/my.conf:/etc/mysql/my.cnf  # 挂载配置文件
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    expose:
      - "${MYSQL_PORT}"
  app:
    restart: always
    container_name: django_app
    build: ./
    env_file:
      - ./.env
    networks:
      - db_networks
      - redis_network
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    tty: true
    stdin_open: true
    ports:
      - "8000:8000"
    expose:
      - "8000"
  celery_worker:
    container_name: celery_worker
    build:
      context: ./
      dockerfile: ./Dockerfile
    entrypoint: /var/www/html/app/start_celery.sh
    networks:
      - redis_network
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - app
      - redis
    restart: unless-stopped
